package dateEv;

import java.util.regex.Pattern;
import java.util.Arrays;
import java.util.regex.Matcher;

public class recData {

	public static void main(String[] args) {
		String text = "Hello! 5 o'clock 7pm  join us next Friday,  pm and pm  at London's Cambridge Theatre to see  This epic touring production of 'Hamlet' finally comes home. Dominic Dromgoole and Bill Buckhurst direct unknowns Ladi Emeruwa and Naeem Hayat in this stripped down version of Shakespeares ultimate tragedy, which has toured (almost) all 205 nations on Earth over the last two years, starting (and finishing) here in London. This 'Hamlet' is a deliberately pared down production to make it as accessible as possible for the numerous venues it has visit all over the planet ";
		System.out.println(giveMeDate(text));
		System.out.println(giveMeTime(text));
	}

	public static String giveMeDate(String text) {
		int regexsNumber = 4;
		String[] results = new String[regexsNumber + 1];
		String[] dataExplicitRegex = new String[regexsNumber + 1];

		String sep, zi, luna, an;
		String bestDate;
		sep = "([/]| |:|'|[.]|,|)*";
		zi = "([1-3]?)([0-9])(nd|th)*";
		luna = "(jan|Jan|JAN|january|JANUARY|January|01|1|";
		luna = luna + "feb|Feb|FEB|february|FEBRUARY|February|02|2|";
		luna = luna + "mar|Mar|MAR|march|MARCH|March|03|3|";
		luna = luna + "apr|Apr|APR|april|APRIL|April|04|4|";
		luna = luna + "may|May|MAY|05|5|";
		luna = luna + "jun|Jun|JUN|june|JUNE|June|06|6|";
		luna = luna + "jul|Jul|JUL|july|JULY|July|07|7|";
		luna = luna + "aug|Aug|AUG|august|AUGUST|August|08|8|";
		luna = luna + "sep|Sep|SEP|september|SEPTEMBER|September|09|9|";
		luna = luna + "oct|Oct|OCT|october|OCTOBER|October|10|";
		luna = luna + "nov|Nov|NOV|november|NOVEMBER|November|11|";
		luna = luna + "dec|Dec|DEC|december|DECEMBER|December|12)";

		an = "(((2(0|1)([0-9])([0-9])))?)";
		dataExplicitRegex[1] = sep + zi + sep + luna + sep + an;
		dataExplicitRegex[2] = sep + luna + sep + zi;
		dataExplicitRegex[3] = sep + luna + sep + zi + sep + an;
		dataExplicitRegex[4] = sep + luna + sep + zi;
				
		
		Pattern r = Pattern.compile(dataExplicitRegex[1]);
		Matcher m = r.matcher(text);
		
		for (int i = 1; i <= regexsNumber; i++) {
			
			r = Pattern.compile(dataExplicitRegex[i]);
			m = r.matcher(text);
			if (m.find()) {
				results[i] = m.group(0);
				
			}

		}
		
		results=RemoveNullValue(results);
		bestDate=maxString(results);
		return bestDate;

	}

	public static String giveMeTime(String text) {
		String time = null;
		int regexsNumber = 4;
		String[] results = new String[regexsNumber + 1];
		String[] timeRegex = new String[regexsNumber + 1];

		String timeRegex1, result = null;
		String timeRegex2;
		String timeRegex3;
		timeRegex[1] = "(((0|1)?[0-9])|2[0-3]):[0-5][0-9]";
		timeRegex[2] = "(([1-9]|1[0-2]) (am|pm) )";
		timeRegex[3] = "((one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|1|2|3|4|5|6|7|8|9|10|11|12)( )*(O'Clock|O'CLOCK|O'clock|o'clock))";
		timeRegex[4] = "a";
		Pattern r = Pattern.compile(timeRegex[1]);
		Matcher m = r.matcher(text);

		for (int i = 1; i <= regexsNumber; i++) {

			r = Pattern.compile(timeRegex[i]);
			m = r.matcher(text);
			if (m.find()) {
				results[i] = m.group(0);
				

			}

		}
		results=RemoveNullValue(results);
		 time=maxString(results);
		 return time;
	}
	
	
	static String[] RemoveNullValue(String[] firstArray) {
		return firstArray = Arrays.stream(firstArray)
                .filter(s -> (s != null && s.length() > 0))
                .toArray(String[]::new);   
		
	}
	static String maxString(String array[]){
	int index = 0; 
	int elementLength = array[1].length();
	for(int i=1; i< array.length; i++) {
	    if(array[i].length() > elementLength) {
	        index = i; elementLength = array[i].length();
	    }
	}
	return array[index];
	}
}
